import logging
from aiogram import Bot, Dispatcher, executor, types
from environs import Env
import markups as nav

env = Env()
env.read_env()
token = env('TELEGRAM_BOT_TOKEN')

bot = Bot(token=token)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start'])
async def check_auth(message: types.Message):
    if message.from_user.full_name == '–ê—Ä—Å–µ–Ω–∏–π': # -- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ –±–∞–∑–µ –ö–ª–∏–µ–Ω—Ç–æ–≤/–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
        await bot.send_message(message.from_user.id, f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é, {message.from_user.id}\n\n'
                                                     '–î–∞–Ω–Ω—ã–π –±–æ—Ç ü§ñ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∫–∞–∫ –ø–æ–¥–ø–∏—Å–æ—á–Ω—ã–π —Å–µ—Ä–≤–∏—Å, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é –≤—ã –Ω–µ –±—ã–ª–∏ '
                                                     '–Ω–∞–π–¥–µ–Ω—ã —Å—Ä–µ–¥–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ü§ê,\n'
                                                     '–ù–û, –Ω–µ –æ—Ç—á–∞–∏–≤–∞–π—Ç–µ—Å—å, –≤—ã —Ç–æ–∂–µ –º–æ–∂–µ—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —Å–µ—Ä–≤–∏—Å–æ–º, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ...',
                               reply_markup=nav.payment_menu)
    else:
        await bot.send_message(message.from_user.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n'
                                                     f'–ë–∏–ø-–±–æ–ø ü§ñ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, —Ç–µ–ø–µ—Ä—å –≤—ã –≤ –Ω–∞—à–µ–º –∑–∞–∫—Ä—ã—Ç–æ–º –∫–ª—É–±–µ\n'
                                                     f'–ü–µ—Ä–≤–æ–µ –ø—Ä–∞–≤–∏–ª–æ –±–æ–π—Ü... –±–∏–ø-–±–æ–ø, –≤ —Å–º—ã—Å–ª–µ –≤—ã–±–µ—Ä–∏—Ç–µ –∫–µ–º —Å–µ–≥–æ–¥–Ω—è —Ö–æ—Ç–∏—Ç–µ –±—ã—Ç—å', reply_markup=nav.main_menu)


@dp.message_handler()
async def choose_role(message: types.Message):
    if message.text == 'üíª–ü–æ–¥—Ä—è–¥—á–∏–∫':
        await bot.send_message(message.from_user.id, '–•—ç–π, –ø—Å, –ø–∞—Ä–µ–Ω—å, —Ä–∞–±–æ—Ç–∞ –Ω—É–∂–Ω–∞?!', reply_markup=nav.worker_menu)
    elif message.text == 'üíº–ö–ª–∏–µ–Ω—Ç':
        await bot.send_message(message.from_user.id, '–†–µ—à–∏–ª, —Å–¥–µ–ª–∞—Ç—å –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –≤ —Å–æ–ª—è–Ω–æ–≥–æ?!\n'
                                                     '–ø—Ä–æ—Å—Ç–∏, –Ω–æ —Å–µ–≥–æ–¥–Ω—è –¥–∞–Ω–Ω–∞—è —á–∞—Å—Ç—å –Ω–∞ —Ä–µ–∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, —Ç–∞–∫ —á—Ç–æ –¥–µ–ª–∞—Ç—å –ø—Ä–∏–¥—ë—Ç—Å—è –ø—Ä–æ–µ–∫—Ç —Å–∞–º–æ–º—É\n'
                                                     'http://sun9-12.userapi.com/c9450/g220358/a_dcfefe22.jpg')

@dp.message_handler()
async def worker_routine(message: types.Message):
    if message.text == 'üìë–í—ã–±—Ä–∞—Ç—å –∑–∞–∫–∞–∑':
        await bot.send_message(message.from_user.id, '–°–¥–µ–ª–∞—Ç—å —Å–∞–π—Ç', reply_markup=nav.choice_menu)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
